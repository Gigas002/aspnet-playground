// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace efmanytomany.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2");

            modelBuilder.Entity("Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_courses");

                    b.ToTable("courses", (string)null);
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("courses_id");

                    b.Property<int>("StudentsId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("students_id");

                    b.HasKey("CoursesId", "StudentsId")
                        .HasName("pk_course_student");

                    b.HasIndex("StudentsId")
                        .HasDatabaseName("ix_course_student_students_id");

                    b.ToTable("course_student", (string)null);
                });

            modelBuilder.Entity("Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_students");

                    b.ToTable("students", (string)null);
                });

            modelBuilder.Entity("StudentRelations", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("student_id");

                    b.Property<int>("RelatedStudentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("related_student_id");

                    b.Property<int>("Relation")
                        .HasColumnType("INTEGER")
                        .HasColumnName("relation");

                    b.HasKey("StudentId", "RelatedStudentId")
                        .HasName("pk_student_relations");

                    b.HasIndex("RelatedStudentId")
                        .HasDatabaseName("ix_student_relations_related_student_id");

                    b.ToTable("student_relations", (string)null);
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_course_student_courses_courses_id");

                    b.HasOne("Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_course_student_students_students_id");
                });

            modelBuilder.Entity("StudentRelations", b =>
                {
                    b.HasOne("Student", "RelatedStudent")
                        .WithMany()
                        .HasForeignKey("RelatedStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_student_relations_students_related_student_id");

                    b.HasOne("Student", "Student")
                        .WithMany("Relations")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_student_relations_students_student_id");

                    b.Navigation("RelatedStudent");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Student", b =>
                {
                    b.Navigation("Relations");
                });
#pragma warning restore 612, 618
        }
    }
}
